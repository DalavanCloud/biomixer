<!-- TODO refactor using ant import target, move stuff into workbench or core -->
<project name="org.thechiselgroup.biomixer" default="production" basedir=".">

	<property name="application.name" value="${ant.project.name}" />
	<property name="gwt-module.name" value="${application.name}.BioMixerWorkbench" />
	<property name="application.dir" value=".." />
	<property name="src.dir" value="${application.dir}/src" />
	<property name="build.dir" value="${application.dir}/war" />
	<property name="build.temp.dir" value="${application.dir}/bin/build" />

	<!--
		  requires local-settings.properties file with
		  gae.sdk.dir=c:\\opt\\appengine-java-sdk-1.4.2
		  gwt.sdk.dir=c:\\opt\\gwt-2.3.0
		-->
	<property file="local-settings.properties" />

	<path id="org.google.gwt-classpath">
		<fileset dir="${gwt.sdk.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="compile.classpath">
		<path refid="org.google.gwt-classpath" />
		<pathelement location="${src.dir}" />
		<pathelement location="${build.dir}/WEB-INF/classes" />
		<fileset dir="${application.dir}">
			<include name="lib/*.jar" />
		</fileset>
	</path>

	<!--
	Builds the jar files from the different Choosel modules that are required for the server side, and copies
	them to WEB-INF/lib. We only need to do this for the server side jars, because we reference the client side
	code in (a) our classpath for gwt-compile and (b) our launch config for the dev environment. 
	-->
	<target name="copy-jars" depends="prepare">
		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset dir="${build.temp.dir}/lib" includes="*.jar" />
		</copy>
	</target>

	<target name="draft" depends="copy-jars,draft-gwt-compile" />

	<target name="production" depends="copy-jars,production-gwt-compile" />

	<target name="prepare" depends="clean">
		<mkdir dir="${build.temp.dir}/lib" />
	</target>


	<target name="clean" description="remove automatically generated build files">
		<delete dir="${build.temp.dir}" />
		<delete dir="${build.dir}/${gwt-module.name}" />
		<delete dir="${build.dir}/WEB-INF/deploy" />
		<delete>
			<fileset dir="${build.dir}/WEB-INF/lib" includes="choosel.*.jar" />
		</delete>
	</target>

	<!-- depends on binary class files, but Eclipse does compilation step in advance -->
	<target name="draft-gwt-compile">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<path refid="compile.classpath" />
			</classpath>
			<!--
				-ea (assertions are not used because we cannot scope the compilation to just include Choosel assertions and
				the other assertions (e.g. from dnd) break our application (when using dnd)) 
				-->
			<arg line="-draftCompile -optimize 0 -logLevel INFO -style DETAILED -localWorkers 3 -war ${build.dir}" />
			<arg value="${gwt-module.name}DevCompile" />
			<jvmarg value="-Xmx1024m" />
			<jvmarg value="-Xss20m" />
		</java>
	</target>

	<!-- depends on binary class files, but Eclipse does compilation step in advance -->
	<target name="production-gwt-compile">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<path refid="compile.classpath" />
			</classpath>
			<arg line="-XdisableCastChecking -XdisableClassMetadata -optimize 9 -logLevel INFO -style OBFUSCATED -localWorkers 3 -war ${build.dir}" />
			<arg value="${gwt-module.name}" />
			<jvmarg value="-Xmx1024m" />
			<jvmarg value="-Xss20m" />
		</java>
	</target>

</project>